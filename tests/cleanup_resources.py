import os

# This is a helper utility to remove cloud resources created by running tests.


def cleanup_azure_blob_storage():
    from azure.identity import DefaultAzureCredential
    from azure.storage.blob import BlobServiceClient

    print("Deleting Azure Blob Storage containers:")
    client = BlobServiceClient(
        account_url=os.environ["AZURE_BLOB_STORAGE_ACCOUNT_URL"], credential=DefaultAzureCredential()
    )
    for container in client.list_containers():
        if container.name.startswith("pytest"):
            client.delete_container(container.name)
            print(f"\t{container.name}")
    print("")


def cleanup_azure_blob_storage_hierarchical():
    from azure.identity import DefaultAzureCredential
    from azure.storage.blob import BlobServiceClient

    print("Deleting Azure Blob Storage HN containers:")
    client = BlobServiceClient(
        account_url=os.environ["AZURE_BLOB_STORAGE_HIERARCHICAL_ACCOUNT_URL"], credential=DefaultAzureCredential()
    )
    for container in client.list_containers():
        if container.name.startswith("pytest"):
            client.delete_container(container.name)
            print(f"\t{container.name}")
    print("")


def cleanup_azure_table_storage():
    from azure.data.tables import TableServiceClient

    print("Deleting Azure Table Storage tables:")
    client = TableServiceClient.from_connection_string(os.environ["AZURE_TABLE_STORAGE_CONNECTION_STRING"])
    for table in client.list_tables():
        if table.name.startswith("pytest"):
            client.delete_table(table.name)
            print(f"\t{table.name}")
    print("")


def cleanup_google_cloud_storage():
    from google.cloud import storage

    print("Deleting Google Cloud Storage buckets:")
    storage_client = storage.Client(project=os.environ["GOOGLE_CLOUD_STORAGE_PROJECT"])
    for bucket in storage_client.list_buckets():
        if bucket.name.startswith("pytest"):
            bucket.delete(force=True)
            print(f"\t{bucket.name}")
    print("")


def cleanup_aws_s3():
    import boto3

    print("Deleting Amazon Web Services S3 buckets:")
    client = boto3.client("s3")
    s3 = boto3.resource("s3")
    for bucket in client.list_buckets()["Buckets"]:
        if bucket["Name"].startswith("pytest"):
            s3_bucket = s3.Bucket(bucket["Name"])
            s3_bucket.objects.all().delete()
            s3_bucket.object_versions.delete()
            s3_bucket.delete()
            print(f"{bucket['Name']}")
    print("")


if __name__ == "__main__":
    print("Cleaning up cloud resources generated by pytest...")
    cleanup_azure_blob_storage()
    cleanup_azure_blob_storage_hierarchical()
    cleanup_azure_table_storage()
    cleanup_google_cloud_storage()
    cleanup_aws_s3()
    print("Done!")
